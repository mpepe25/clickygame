{"version":3,"sources":["components/Card/card.js","components/Wrapper/index.js","components/Title/Title.js","App.js","index.js"],"names":["Card","props","className","src","imgUrl","alt","name","id","onClick","clickCard","Wrapper","children","Title","App","state","data","simpsonsClicked","score","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","includes","alert","setState","checkIfWon","this","map","key","card","React","Component","ReactDOM","render","document","getElementById"],"mappings":"60CAGe,SAASA,EAAKC,GACzB,OACI,yBAAKC,UAAU,WACX,yBAAKC,IAAKF,EAAMG,OAAQC,IAAKJ,EAAMK,KAAMJ,UAAU,UAAUK,GAAIN,EAAMM,GAAIC,QAAS,kBAAIP,EAAMQ,UAAUR,EAAMM,Q,MCC3GG,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCE1BC,G,MAHD,SAAAX,GAAK,OAAI,wBAAIC,UAAU,SAASD,EAAMU,Y,OCmFrCE,G,iNA9EbC,MAAQ,CACNC,KAAMA,EACNC,gBAAiB,GACjBC,MAAO,G,EAOTC,QAAU,SAAAC,GAKR,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,G,EAETV,UAAY,SAAAF,GACN,EAAKO,MAAME,gBAAgBW,SAASpB,IACtCqB,MAAM,wBACN,EAAKC,SAAS,CAAEb,gBAAiB,GAAIC,MAAO,IAC5C,EAAKC,QAAQH,KAGb,EAAKc,SAAS,CACZb,gBAAgB,GAAD,mBAAM,EAAKF,MAAME,iBAAjB,CAAkCT,IACjDU,MAAO,EAAKH,MAAMG,MAAQ,GACzB,kBAAM,EAAKa,eACd,EAAKZ,QAAQH,K,EAIjBe,WAAa,WACP,EAAKhB,MAAME,gBAAgBO,SAAW,EAAKT,MAAMC,KAAKQ,SAExD,EAAKM,SAAS,CAAEb,gBAAiB,GAAIC,MAAO,IAC5C,EAAKC,QAAQH,K,mFAvCfgB,KAAKF,SAAS,CAAEd,KAAMA,M,+BA0Cd,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,sBAEA,8CAAoBgB,KAAKjB,MAAMG,OAE/B,yBAAKf,UAAU,aACZ6B,KAAKjB,MAAMC,KAAKiB,IAAI,SAAAC,GACnB,OACE,kBAAC,EAAD,CACEA,IAAKA,EAAI1B,GACTA,GAAI0B,EAAI1B,GACR2B,KAAMD,EAAI3B,KACVF,OAAQ6B,EAAI7B,OACZK,UAAW,EAAKA,qB,GAnEhB0B,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b523b1b.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css'\n\nexport default function Card(props){\n    return (\n        <div className=\"imgTile\" >\n            <img src={props.imgUrl} alt={props.name} className=\"imgCard\" id={props.id} onClick={()=>props.clickCard(props.id)} />\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>\n\n\nexport default Title;","import React from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper/index\";\nimport Title from \"./components/Title\";\nimport data from \"./Data/Cards.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    data: data,\n    simpsonsClicked: [],\n    score: 0,\n  \n  };\n\n  componentDidMount() {\n    this.setState({ data: data });\n  }\n  shuffle = array => {\n    var currentIndex = array.length;\n    var temporaryValue, randomIndex;\n\n    // While there remain elements shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n  clickCard = id => {\n    if (this.state.simpsonsClicked.includes(id)) {\n      alert(\"You Loss, Start Over\");\n      this.setState({ simpsonsClicked: [], score: 0 });\n      this.shuffle(data);\n      \n    } else {\n      this.setState({\n        simpsonsClicked: [...this.state.simpsonsClicked, id],\n        score: this.state.score + 1\n      }, () => this.checkIfWon());\n      this.shuffle(data);\n    }\n  };\n\n  checkIfWon = () => {\n    if (this.state.simpsonsClicked.length === this.state.data.length) {\n      // alert('You Won!')\n      this.setState({ simpsonsClicked: [], score: 0 });\n      this.shuffle(data);\n  }\n}\n  render() {\n    return (\n      <div>\n        <Wrapper>\n          <Title>SIMPSON GAME </Title>\n\n          <h1> CorrectScore: {this.state.score}</h1>\n\n          <div className=\"container\">\n            {this.state.data.map(key => {\n              return (\n                <Card\n                  key={key.id}\n                  id={key.id}\n                  card={key.name}\n                  imgUrl={key.imgUrl}\n                  clickCard={this.clickCard}\n                />\n              );\n            })}\n          </div>\n\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}